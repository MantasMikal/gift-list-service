#!/bin/bash

set -e # using the options command to abort script at first error
echo
echo "PRE-COMMIT"

EMAIL=$(git config user.email)
# make sure the user has registered a valid university email address
if [[ $EMAIL != *"@coventry.ac.uk" ]]; then
	echo "  invalid config settings"
	echo "  Your registered email is currently '$EMAIL'"
	echo "  please run the following git commands:"
	echo "    $ git config user.email xxx@coventry.ac.uk"
	echo "    $ git config user.name 'zzz'"
	echo "  where 'xxx' is your university username"
	echo "  and 'zzz' is your name as it appears on your university ID badge"
	exit 1
fi

# see if the user is trying to merge a branch into master
branch="$(git rev-parse --abbrev-ref HEAD)"
if [[ $2 == 'merge' ]]; then
	echo "merging branch"
	if [[ "$branch" == "master" ]]; then
		echo "  trying to merge into the 'master' branch"
		echo "  you should push the local branch to GitHub"
		echo "  and merge to master using a pull request"
		echo
		exit 1
	fi
fi

# see if the user is trying to commit to the master branch
if [ "$branch" = "master" ]; then
	read -p "  You are about to commit to the master branch, are you sure? [y|n] " -n 1 -r < /dev/tty
	echo
	if echo $REPLY | grep -E '^[Yy]$' > /dev/null
	then
		exit 0 # commit will execute
	fi
	exit 1 # commit will not execute
fi

# # Enforce commit style
# messagecheck=`echo $gitmessage | grep -w "feat\|fix\|docs\|breaking"`
# if [ -z "$messagecheck" ]
# then 
# 			echo "Your commit message must begin with one of the following"
# 			echo "  feat(feature-name)"
# 			echo "  fix(fix-name)"
# 			echo "  docs(docs-change)"
# 			echo " "
# fi

# check for valid branch name:
local_branch="$(git rev-parse --abbrev-ref HEAD)"
valid_branch_regex="^(feature|chore|fix)\/[a-z0-9._-]+$"
if [[ ! $local_branch =~ $valid_branch_regex ]]
then
    echo "invalid branch name"
    echo "branch name should be (feature|fix|chore)/commit message"
		echo "e.g. fix/nasty-bug"
		echo "please rename your branch and try again."
    exit 1
fi

echo 'Checking code style and fixing errors...'

./node_modules/.bin/eslint . --fix

echo 'Running test suites...'
NODE_ENV=development ./node_modules/.bin/ava

echo 'Generating JsDoc...'

./node_modules/.bin/jsdoc -c jsdoc.conf

echo "All good! Commit was successful ðŸ˜Ž"
